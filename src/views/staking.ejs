<%- include('./common/header') %>
<main>
    <!-- breadcrumb area start -->

    <section class="breadcrumb-area pt-40 pb-40 bg_img" data-background="https://xpressrow.com/html/cafena/cafena/assets/images/bg/breadcrumb-bg-1.jpeg" data-overlay="dark" data-opacity="5">
        <div class="container">
            <div class="row">
                <div class="col-xl-12 text-center">
                    <h2 class="page-title" style="font-weight:300;color: #C7A17A;">TOKMAX STAKING POOL</h2>
                    <div class="cafena-breadcrumb breadcrumbs">
                        <ul class="list-unstyled d-flex align-items-center justify-content-center">
                            <li class="cafenabcrumb-item duxinbcrumb-begin">
                                <a href="#"><span style="color: #C7A17A;">STAKE TOKMAX TOKENS TO EARN MORE</span></a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- breadcrumb area end -->

    <!-- wcu section start -->
    <section class="wcu__area pt-100 pb-100">
        <div class="container">

            <div class="row" style="justify-content:center;">
                <div class="col-xl-4 col-lg-4 col-md-8 mt-30 text-center">
                    <div class="wcu__item">
                        <ul class="about__list list-unstyled" style="text-align: left;margin-bottom: 1px;padding-top: 25px;">
                            <li><span style="color: #1b2026 !important;font-size: 15px;"><i class="icon fal fa-long-arrow-right" style="margin-bottom: 20px;background: #fff;color: #000;line-height: 30px;width: 30px;height: 30px;margin-right: 5px;"></i> TOTAL STAKED TOKENS </span><span style="text-align:right;color: #1b2026 !important;" class="tot_staked">0</span></li>
                            <li><span style="color: #1b2026 !important;font-size: 15px;"><i class="icon fal fa-long-arrow-right" style="margin-bottom: 20px;background: #fff;color: #000;line-height: 30px;width: 30px;height: 30px;margin-right: 5px;"></i> MY STAKING SHARE </span><span style="text-align:right;color: #1b2026 !important;" class="myShare">16</span></li>
                            <li><span style="color: #1b2026 !important;font-size: 15px;"><i class="icon fal fa-long-arrow-right" style="background: #fff;color: #000;line-height: 30px;width: 30px;height: 30px;margin-right: 5px;"></i> POOL SUPPLY </span><span style="text-align:right;color: #1b2026 !important;" class="pol_supply">321424</span></li>
                        </ul>
                    </div>
                </div>
                <div class="col-xl-4 col-lg-4 col-md-8 mt-30 text-center">
                    <div class="wcu__item">
                        <div class="content">
                            <h2 class="title" style="font-weight: 400;margin-bottom: 0px;font-size: 24px;">STAKING</h2>
                            <hr style="width:100%; margin: auto;color:#000" />
                            <span class="price user_stk_staking box_values">12.00</span>
                            <h5 style="font-weight: 400;"> Tokens Staked</h5>
                            <button class="btn btn_primary text-uppercase" style="margin-top: 25px;">Approve</button>
                        </div>
                    </div>
                </div>
                <div class="col-xl-4 col-lg-4 col-md-8 mt-30 text-center">
                    <div class="wcu__item">
                        <div class="content">
                            <h2 class="title" style="font-weight: 400;margin-bottom: 0px;font-size: 24px;">Rewards</h2>
                            <hr style="width:100%; margin: auto;color:#000" />
                            <span class="price user_earnings_staking box_values">12.00</span>
                            <h5 style="font-weight: 500;">TOK EARNED</h5>
                            <button class="btn btn_primary text-uppercase" style="margin-top: 25px;">Withdraw</button>
                        </div>
                    </div>
            </div>
        </div>
    </section>
    <!-- wcu section end -->
</main>
<%- include('./common/footer') %>


<script type="text/javascript">$(document).ready(async function() {
    function init(){
        tokenContractInstance = new myweb3.eth.Contract(tokmas_ABI, tokmas_contract_address, {
            from: myAccountAddress, // default from address
        });
        stakingContractInstance = new myweb3.eth.Contract(tokmas_staking_ABI, tokmas_staking_contract, {
            from: myAccountAddress, // default from address
        });
    }
    
    setTimeout(init,2000); 
    async function checkApproved(){            
        var allowance = await tokenContractInstance.methods.allowance(myAccountAddress,tokmas_staking_contract).call();
        if(allowance>0){ 
            if(allowance>0){$(".app_btn").css("display","none").prop('disabled', true);$(".stk_sec_token").show();$(".stk_btn").prop('disabled', false);$(".unstk_btn").prop('disabled', false);}else{$(".app_btn").show().prop('disabled', false);$(".stk_sec_token").hide();$(".stk_btn").prop('disabled', true);$(".unstk_btn").prop('disabled', true);$("#stake_modal").modal("hide");$("#unstake_modal").modal("hide");}
        }
    }

    async function checkBalance(){            
        var user_lp_balance = await tokenContractInstance.methods.balanceOf(myAccountAddress).call();
        console.log(user_lp_balance);
        if(user_lp_balance>0){
            
            $('.user_lp_bal').html(user_lp_balance);
        }
    }
        
    async function checkStaked(){
        var staked = await stakingContractInstance.methods.balanceOf(myAccountAddress).call();
        if(staked>0){
            $('#btnStake').prop('disabled', true); 
            $('#btnUnstake').prop('disabled', false); 
            $('.user_stk_staking').html(staked/1e6);
            var reward = await stakingContractInstance.methods.earned(myAccountAddress).call(); 
            if(reward>0){
                $('.user_earnings_staking').html(reward/1e6);
                $('#btnWithdraw2').hide();
                $('.wid_sec').show();
                $('#btnWithdraw').prop('disabled', false); 
                $('#btnExit').prop('disabled', false); 
            }                              
        }
    }

setInterval(async ()=>{

    if(myAccountAddress!=false){
        var user_stake = await stakingContractInstance.methods.balanceOf(myAccountAddress).call();
        user_stake = parseFloat(user_stake / 1e6)
        var user_earn = await stakingContractInstance.methods.earned(myAccountAddress).call(); 
        user_earn = parseFloat(user_earn / 1e6)
        var totalSupply = await stakingContractInstance.methods.totalSupply().call();
        totalSupply = parseFloat(totalSupply / 1e6);
        var myShare = (user_stake/totalSupply)*0.01;
        var polSupply = await stakingContractInstance.methods.polSupply().call();
        $('.tot_staked').html(totalSupply/1e6);
        $('.pol_supply').html(polSupply/1e6);
        $('.user_stk').html(user_stake);
        $('.user_stk_bal').html(user_stake);
        $('.user_earnings').html(user_earn);
        console.log(myShare)
        $('.myShare').html(myShare);
       
        checkApproved();
        checkBalance();
        checkStaked();

        if(user_earn>0){$(".wid_db_btn").css("display","none");$(".wid_sec").show();$(".wid_btn").prop('disabled', false);$(".ext_btn").prop('disabled', false);}else{$(".wid_db_btn").show();$(".wid_sec").hide();$(".wid_btn").prop('disabled', true);$(".ext_btn").prop('disabled', true);}

    }else{console.log('Metamask not login!')}
    
}, 3000)


$('.app_btn').click(async function() {
   //approve tokens
        maxApproveLimit = await tokenContractInstance.methods.totalSupply().call();
        
        var result = await tokenContractInstance.methods.approve(tokmas_staking_contract,maxApproveLimit).send({
            from: myAccountAddress,
            to: tokmas_staking_contract,
            gasPrice: 10000000000,
            gasLimit: 1000000,
            //value : 0,       
        });
        
        if(result.status){
            toastr.success('Transaction Initiated. Check status on <a href="'+bscscanTxURL+result.transactionHash+'" target="_blank">BscScan</a>');
            $('#btnApprove').hide();
            $('.stk_sec_token').show();
        }else{
            toastr.error('Transaction Failed. Try Again.');
        }
});

$('.stk_btn').click(async function() {$("#stake_modal").modal("show");}); 
$('.stk_mod_btn').click(async function() {
    let stk_amt = $('#stk_amt').val();let lp_bal = $('.user_lp_bal').html();let tok="TRX";
    console.log(stk_amt);console.log(lp_bal);
    if(!$.trim(stk_amt).length){toastr.error('Not a valid amount');return false;}
    if(parseFloat(stk_amt)<=0){toastr.error('Not a valid amount');return false;}
    if(parseFloat(stk_amt)>parseFloat(lp_bal)){toastr.error('Not enough LP token balance');return false;}
   
    let stk_amt_val = stk_amt * 1e6;
    var result = await stakingContractInstance.methods.stake(stk_amt_val).send({
        from: myAccountAddress,
        to: tokmas_staking_contract,
        gasPrice: 10000000000,
        gasLimit: 1000000,
        //value : 0,       
    });

    if(result.status){
        $("#stake_modal").modal("hide");
        toastr.success('Transaction Initiated. Check status on <a href="'+bscscanTxURL+result.transactionHash+'" target="_blank">BscScan</a>');
        //checkStaked();
    }else{
        toastr.error('Transaction Failed. Try Again.');
    }

});

$('.unstk_btn').click(async function() {$("#unstake_modal").modal("show");});
$('.unstk_mod_btn').click(async function() {
    let unstk_amt = $('#unstk_amt').val(); console.log(unstk_amt);let user_stk_bal = $('.user_stk_bal').html();console.log('user stake is');console.log(user_stk_bal);
    if(!$.trim(unstk_amt).length){toastr.error('Not a valid amount');return false;}
    if(parseFloat(unstk_amt)<=0){toastr.error('Not a valid amount');return false;}
    if(parseFloat(unstk_amt)>parseFloat(user_stk_bal)){toastr.error('Not enough LP tokens staked');return false;}
    let unstk_amt_val = unstk_amt * 1e6;    
    var result = await stakingContractInstance.methods.withdraw(unstk_amt_val).send({
        from: myAccountAddress,
        to: tokmas_contract_address,
        gasPrice: 10000000000,
        gasLimit: 1000000,
        //value : 0,       
    });

    if(result.status){
        $("#unstake_modal").modal("hide");
        toastr.success('Transaction Initiated. Check status on <a href="'+bscscanTxURL+result.transactionHash+'" target="_blank">BscScan</a>');
    }else{
        toastr.error('Transaction Failed. Try Again.');
    }
});

$('.wid_btn').click(async function() {
    var result = await stakingContractInstance.methods.getReward().send({
        from: myAccountAddress,
        to: tokmas_contract_address,
        gasPrice: 10000000000,
        gasLimit: 1000000,
        //value : 0,       
    });

    if(result.status){
        toastr.success('Transaction Initiated. Check status on <a href="'+bscscanTxURL+result.transactionHash+'" target="_blank">BscScan</a>');
    }else{
        toastr.error('Transaction Failed. Try Again.');
    }
});

$('.ext_btn').click(async function() {
          var result = await stakingContractInstance.methods.exit().send({
                 from: myAccountAddress,
                 to: tokmas_staking_contract,
                 gasPrice: 10000000000,
                 gasLimit: 1000000,
                 //value : 0,       
             });

            if(result.status){
                toastr.success('Transaction Initiated. Check status on <a href="'+bscscanTxURL+result.transactionHash+'" target="_blank">BscScan</a>');
            }else{
                toastr.error('Transaction Failed. Try Again.');
            }
    });


});
</script>